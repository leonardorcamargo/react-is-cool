{"map":"{\"version\":3,\"sources\":[\"/home/leonardo/development/meetup/madrugada-react/react-is-cool/src/model/Presence.js\",\"/home/leonardo/development/meetup/madrugada-react/react-is-cool/src/api/PresenceApi.js\",\"/home/leonardo/development/meetup/madrugada-react/react-is-cool/src/components/App/index.jsx\",\"/home/leonardo/development/meetup/madrugada-react/react-is-cool/src/serviceWorker.js\",\"/home/leonardo/development/meetup/madrugada-react/react-is-cool/src/index.js\"],\"names\":[\"Presence\",\"_ref\",\"_id\",\"presence\",\"entryTime\",\"exitTime\",\"Object\",\"classCallCheck\",\"this\",\"Date\",\"path\",\"get\",\"asyncToGenerator\",\"regenerator_default\",\"a\",\"mark\",\"_callee\",\"_ref2\",\"data\",\"wrap\",\"_context\",\"prev\",\"next\",\"axios\",\"sent\",\"abrupt\",\"map\",\"item\",\"t0\",\"Error\",\"stop\",\"apply\",\"arguments\",\"App\",\"props\",\"_this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"presences\",\"presencesFiltered\",\"filtered\",\"grouped\",\"getPresences\",\"bind\",\"assertThisInitialized\",\"onSelectFilter\",\"onAgroup\",\"filter\",\"setState\",\"setInterval\",\"_this2\",\"react_default\",\"createElement\",\"Panel\",\"bsStyle\",\"Heading\",\"Title\",\"componentClass\",\"Body\",\"Form\",\"horizontal\",\"FormGroup\",\"controlId\",\"Col\",\"sm\",\"md\",\"FormControl\",\"placeholder\",\"onChange\",\"value\",\"Checkbox\",\"Table\",\"striped\",\"bordered\",\"hover\",\"responsive\",\"renderPresences\",\"key\",\"toString\",\"toLocaleString\",\"result\",\"console\",\"log\",\"_context2\",\"event\",\"target\",\"agrouped\",\"checked\",\"reduce\",\"acc\",\"cur\",\"length\",\"push\",\"React\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"components_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"sSAceA,EAbX,SAAAA,EAAAC,GAKG,IAJCC,EAIDD,EAJCC,IACAC,EAGDF,EAHCE,SACAC,EAEDH,EAFCG,UACAC,EACDJ,EADCI,SACDC,OAAAC,EAAA,EAAAD,CAAAE,KAAAR,GACCQ,KAAKN,IAAMA,EACXM,KAAKL,SAAWA,EAChBK,KAAKJ,UAAY,IAAIK,KAAKL,GAC1BI,KAAKH,SAAW,IAAII,KAAKJ,ICP3BK,EAAO,kCAEPC,EAAG,WAAA,IAAAV,EAAAK,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIMC,EAAAA,EAAMZ,IAAID,GAJhB,KAAA,EAAA,OAAAO,EAAAG,EAAAI,KAGAN,EAHAD,EAGAC,KAHAE,EAAAK,OAAA,SAKGP,EAAKQ,IAAI,SAAAC,GAAI,OAAI,IAAI3B,EAAS2B,MALjC,KAAA,EAAA,MAAAP,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,MAAA,GAOES,MAAM,iCAPR,KAAA,GAAA,IAAA,MAAA,OAAAT,EAAAU,SAAAd,EAAAR,KAAA,CAAA,CAAA,EAAA,QAAH,OAAA,WAAA,OAAAP,EAAA8B,MAAAvB,KAAAwB,YAAA,GCqIMC,cArIX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAA7B,OAAAC,EAAA,EAAAD,CAAAE,KAAAyB,IACfE,EAAA7B,OAAA8B,EAAA,EAAA9B,CAAAE,KAAAF,OAAA+B,EAAA,EAAA/B,CAAA2B,GAAAK,KAAA9B,KAAM0B,KAEDK,MAAQ,CACTC,UAAW,GACXC,kBAAmB,IAEvBN,EAAKO,SAAW,MAChBP,EAAKQ,SAAU,EAEfR,EAAKS,aAAeT,EAAKS,aAAaC,KAAlBvC,OAAAwC,EAAA,EAAAxC,CAAAA,OAAAwC,EAAA,EAAAxC,CAAA6B,KACpBA,EAAKY,eAAiBZ,EAAKY,eAAeF,KAApBvC,OAAAwC,EAAA,EAAAxC,CAAAA,OAAAwC,EAAA,EAAAxC,CAAA6B,KACtBA,EAAKa,SAAWb,EAAKa,SAASH,KAAdvC,OAAAwC,EAAA,EAAAxC,CAAAA,OAAAwC,EAAA,EAAAxC,CAAA6B,KAChBA,EAAKc,OAASd,EAAKc,OAAOJ,KAAZvC,OAAAwC,EAAA,EAAAxC,CAAAA,OAAAwC,EAAA,EAAAxC,CAAA6B,KAbCA,sNAiBT3B,KAAKoC,sBACXpC,KAAK0C,SAAS,CACVT,kBAAmBjC,KAAK+B,MAAMC,YAGlCW,YAAY,WAAA,OAAMC,EAAKR,gBAAgB,yIAIvC,IAAMJ,EAAYhC,KAAK+B,MAAME,kBAC7B,OACIY,EAAAvC,EAAAwC,cAAA,MAAA,KACID,EAAAvC,EAAAwC,cAACC,EAAA,EAAD,CAAOC,QAAQ,WACXH,EAAAvC,EAAAwC,cAACC,EAAA,EAAME,QAAP,KACIJ,EAAAvC,EAAAwC,cAACC,EAAA,EAAMG,MAAP,CAAaC,eAAe,MAA5B,6CAEJN,EAAAvC,EAAAwC,cAACC,EAAA,EAAMK,KAAP,KACIP,EAAAvC,EAAAwC,cAACO,EAAA,EAAD,CAAMC,YAAU,GACZT,EAAAvC,EAAAwC,cAACS,EAAA,EAAD,CAAWC,UAAU,qBACjBX,EAAAvC,EAAAwC,cAACW,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACZd,EAAAvC,EAAAwC,cAACc,EAAA,EAAD,CAAaT,eAAe,SAASU,YAAY,SAASC,SAAU9D,KAAKuC,gBACrEM,EAAAvC,EAAAwC,cAAA,SAAA,CAAQiB,MAAM,OAAd,eACAlB,EAAAvC,EAAAwC,cAAA,SAAA,CAAQiB,MAAM,QAAd,oBACAlB,EAAAvC,EAAAwC,cAAA,SAAA,CAAQiB,MAAM,QAAd,4BAGRlB,EAAAvC,EAAAwC,cAACW,EAAA,EAAD,CAAKC,GAAI,GACLb,EAAAvC,EAAAwC,cAACkB,EAAA,EAAD,CAAUF,SAAU9D,KAAKwC,UAAzB,iCAIZK,EAAAvC,EAAAwC,cAACmB,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,GACpCxB,EAAAvC,EAAAwC,cAAA,QAAA,KACID,EAAAvC,EAAAwC,cAAA,KAAA,KACID,EAAAvC,EAAAwC,cAAA,KAAA,KAAA,wBACAD,EAAAvC,EAAAwC,cAAA,KAAA,KAAA,qBACAD,EAAAvC,EAAAwC,cAAA,KAAA,KAAA,oBAGRD,EAAAvC,EAAAwC,cAAA,QAAA,KACK9C,KAAKsE,gBAAgBtC,gDASlCA,GACZ,OAAOA,EAAUd,IAAI,SAAAC,GACjB,OACI0B,EAAAvC,EAAAwC,cAAA,KAAA,CAAIyB,IAAKpD,EAAKzB,IAAI8E,YACd3B,EAAAvC,EAAAwC,cAAA,KAAA,KAAK3B,EAAKvB,UAAU6E,eAAe,UACnC5B,EAAAvC,EAAAwC,cAAA,KAAA,KAAK3B,EAAKtB,SAAS4E,eAAe,UAClC5B,EAAAvC,EAAAwC,cAAA,KAAA,KAAK3B,EAAKxB,SAAW,UAAY,2KAOzC+E,EAAS,qBAEMvE,WAAfuE,yDAEAC,QAAQC,IAARC,EAAAzD,YAGJpB,KAAK0C,SAAS,CACVV,UAAW0C,sJAIJI,GACX9E,KAAKkC,SAAW4C,EAAMC,OAAOhB,MAC7B/D,KAAKyC,0CAGAqC,GACL9E,KAAKgF,SAAWF,EAAMC,OAAOE,QAC7BjF,KAAKyC,0CAIL,IAAMT,EAAYhC,KAAK+B,MAAMC,UACvBgD,EAAWhF,KAAKgF,SAChBvC,EAASzC,KAAKkC,SAEhBwC,EAAS,GAETA,EADAM,EACShD,EAAUkD,OAAO,SAACC,EAAKC,GAC5B,OAAID,EAAIE,QAAUF,EAAIA,EAAIE,OAAS,GAAG1F,WAAayF,EAAIzF,UACnDwF,EAAIA,EAAIE,OAAQ,GAAGxF,SAAWuF,EAAIvF,SAC3BsF,IAEXA,EAAIG,KAAKF,GACFD,IACR,IAEMnD,EAGE,QAAXS,GAMJiC,EAASA,EAAOjC,OAAO,SAAAtB,GAAI,OAAIA,EAAKxB,YAAyB,SAAX8C,KAClDzC,KAAK0C,SAAS,CACVT,kBAAmByC,KAPnB1E,KAAK0C,SAAS,CACVT,kBAAmByC,WA3HjBa,EAAAA,EAAMC,WCQJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOlD,EAAAvC,EAAAwC,cAACkD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"class Presence {\\n    constructor({\\n        _id,\\n        presence,\\n        entryTime,\\n        exitTime\\n    }) {\\n        this._id = _id;\\n        this.presence = presence;\\n        this.entryTime = new Date(entryTime);\\n        this.exitTime = new Date(exitTime);\\n    }\\n}\\n\\nexport default Presence;\",\"import axios from 'axios';\\nimport Presence from '../model/Presence';\\n\\nconst path = 'http://localhost:3001/presences';\\n\\nconst get = async () => {\\n    try {\\n        const {\\n            data\\n        } = await axios.get(path);\\n        return data.map(item => new Presence(item));\\n    } catch (e) {\\n        throw Error('Erro ao buscar presenças: ');\\n    }\\n}\\n\\nconst post = async (presence) => {\\n    try {\\n        await axios.post(path, JSON.stringify(presence));\\n    } catch (e) {\\n        console.log('Erro ao postar presença: ', e);\\n    }\\n}\\n\\nexport {\\n    get,\\n    post\\n}\",\"import React from 'react';\\nimport { Table, Panel, FormGroup, FormControl, Form, Col, Checkbox } from 'react-bootstrap';\\nimport { get } from '../../api/PresenceApi';\\n\\nclass App extends React.Component {\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            presences: [],\\n            presencesFiltered: [],\\n        }\\n        this.filtered = 'all';\\n        this.grouped = false;\\n\\n        this.getPresences = this.getPresences.bind(this);\\n        this.onSelectFilter = this.onSelectFilter.bind(this);\\n        this.onAgroup = this.onAgroup.bind(this);\\n        this.filter = this.filter.bind(this);\\n    }\\n\\n    async componentDidMount() {\\n        await this.getPresences();\\n        this.setState({\\n            presencesFiltered: this.state.presences,\\n        });\\n\\n        setInterval(() => this.getPresences(), 15000);\\n    }\\n\\n    render() {\\n        const presences = this.state.presencesFiltered;\\n        return (\\n            <div>\\n                <Panel bsStyle=\\\"default\\\">\\n                    <Panel.Heading>\\n                        <Panel.Title componentClass=\\\"h2\\\">Controle de acesso a Sala de Reuniões</Panel.Title>\\n                    </Panel.Heading>\\n                    <Panel.Body>\\n                        <Form horizontal>\\n                            <FormGroup controlId=\\\"formControlFilter\\\">\\n                                <Col sm={4} md={3}>\\n                                    <FormControl componentClass=\\\"select\\\" placeholder=\\\"select\\\" onChange={this.onSelectFilter}>\\n                                        <option value=\\\"all\\\">Exibir tudo</option>\\n                                        <option value=\\\"busy\\\">Somente ocupados</option>\\n                                        <option value=\\\"free\\\">Somente disponíveis</option>\\n                                    </FormControl>\\n                                </Col>\\n                                <Col sm={3}>\\n                                    <Checkbox onChange={this.onAgroup}>Agrupar por Situação</Checkbox>\\n                                </Col>\\n                            </FormGroup>\\n                        </Form>\\n                        <Table striped bordered hover responsive>\\n                            <thead>\\n                                <tr>\\n                                    <th>Inicio da análise</th>\\n                                    <th>Fim da análise</th>\\n                                    <th>Situação</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                {this.renderPresences(presences)}\\n                            </tbody>\\n                        </Table>\\n                    </Panel.Body>\\n                </Panel>\\n            </div>\\n        )\\n    }\\n\\n    renderPresences(presences) {\\n        return presences.map(item => {\\n            return (\\n                <tr key={item._id.toString()}>\\n                    <td>{item.entryTime.toLocaleString('pt-Br')}</td>\\n                    <td>{item.exitTime.toLocaleString('pt-Br')}</td>\\n                    <td>{item.presence ? 'Ocupado' : 'Liberado'}</td>\\n                </tr>\\n            );\\n        });\\n    }\\n\\n    async getPresences() {\\n        let result = [];\\n        try {\\n            result = await get();\\n        } catch (e) {\\n            console.log(e);\\n        }\\n\\n        this.setState({\\n            presences: result,\\n        });\\n    }\\n\\n    onSelectFilter(event) {\\n        this.filtered = event.target.value\\n        this.filter();\\n    }\\n\\n    onAgroup(event) {\\n        this.agrouped = event.target.checked;\\n        this.filter();\\n    }\\n\\n    filter() {\\n        const presences = this.state.presences;\\n        const agrouped = this.agrouped;\\n        const filter = this.filtered;\\n\\n        let result = [];\\n        if (agrouped) {\\n            result = presences.reduce((acc, cur) => {\\n                if (acc.length && acc[acc.length - 1].presence === cur.presence) {\\n                    acc[acc.length -1].exitTime = cur.exitTime;\\n                    return acc;\\n                }\\n                acc.push(cur);\\n                return acc;\\n            }, []);\\n        } else {\\n            result = presences;\\n        }\\n\\n        if (filter === 'all') {\\n            this.setState({\\n                presencesFiltered: result\\n            });\\n            return;\\n        }\\n        result = result.filter(item => item.presence === (filter === 'busy'))\\n        this.setState({\\n            presencesFiltered: result\\n        });\\n    }\\n}\\n\\nexport default App;\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './components/App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{142:function(e,t,n){\"use strict\";n.r(t);var r=n(1),a=n.n(r),c=n(31),s=n.n(c),i=(n(68),n(11)),o=n.n(i),l=n(15),u=n(23),p=n(54),h=n(61),d=n(55),m=n(60),f=n(9),v=n(148),b=n(144),g=n(150),E=n(145),w=n(149),y=n(146),O=n(147),j=n(32),k=n.n(j),S=function e(t){var n=t._id,r=t.presence,a=t.entryTime,c=t.exitTime;Object(u.a)(this,e),this._id=n,this.presence=r,this.entryTime=new Date(a),this.exitTime=new Date(c)},x=\"http://localhost:3001/presences\",F=function(){var e=Object(l.a)(o.a.mark(function e(){var t,n;return o.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,k.a.get(x);case 3:return t=e.sent,n=t.data,e.abrupt(\"return\",n.map(function(e){return new S(e)}));case 8:throw e.prev=8,e.t0=e.catch(0),Error(\"Erro ao buscar presen\\xe7as: \");case 11:case\"end\":return e.stop()}},e,this,[[0,8]])}));return function(){return e.apply(this,arguments)}}(),T=function(e){function t(e){var n;return Object(u.a)(this,t),(n=Object(h.a)(this,Object(d.a)(t).call(this,e))).state={presences:[],presencesFiltered:[]},n.filtered=\"all\",n.grouped=!1,n.getPresences=n.getPresences.bind(Object(f.a)(Object(f.a)(n))),n.onSelectFilter=n.onSelectFilter.bind(Object(f.a)(Object(f.a)(n))),n.onAgroup=n.onAgroup.bind(Object(f.a)(Object(f.a)(n))),n.filter=n.filter.bind(Object(f.a)(Object(f.a)(n))),n}return Object(m.a)(t,e),Object(p.a)(t,[{key:\"componentDidMount\",value:function(){var e=Object(l.a)(o.a.mark(function e(){var t=this;return o.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getPresences();case 2:this.setState({presencesFiltered:this.state.presences}),setInterval(function(){return t.getPresences()},15e3);case 4:case\"end\":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}()},{key:\"render\",value:function(){var e=this.state.presencesFiltered;return a.a.createElement(\"div\",null,a.a.createElement(v.a,{bsStyle:\"default\"},a.a.createElement(v.a.Heading,null,a.a.createElement(v.a.Title,{componentClass:\"h2\"},\"Controle de acesso a Sala de Reuni\\xf5es\")),a.a.createElement(v.a.Body,null,a.a.createElement(b.a,{horizontal:!0},a.a.createElement(g.a,{controlId:\"formControlFilter\"},a.a.createElement(E.a,{sm:4,md:3},a.a.createElement(w.a,{componentClass:\"select\",placeholder:\"select\",onChange:this.onSelectFilter},a.a.createElement(\"option\",{value:\"all\"},\"Exibir tudo\"),a.a.createElement(\"option\",{value:\"busy\"},\"Somente ocupados\"),a.a.createElement(\"option\",{value:\"free\"},\"Somente dispon\\xedveis\"))),a.a.createElement(E.a,{sm:3},a.a.createElement(y.a,{onChange:this.onAgroup},\"Agrupar por Situa\\xe7\\xe3o\")))),a.a.createElement(O.a,{striped:!0,bordered:!0,hover:!0,responsive:!0},a.a.createElement(\"thead\",null,a.a.createElement(\"tr\",null,a.a.createElement(\"th\",null,\"Inicio da an\\xe1lise\"),a.a.createElement(\"th\",null,\"Fim da an\\xe1lise\"),a.a.createElement(\"th\",null,\"Situa\\xe7\\xe3o\"))),a.a.createElement(\"tbody\",null,this.renderPresences(e))))))}},{key:\"renderPresences\",value:function(e){return e.map(function(e){return a.a.createElement(\"tr\",{key:e._id.toString()},a.a.createElement(\"td\",null,e.entryTime.toLocaleString(\"pt-Br\")),a.a.createElement(\"td\",null,e.exitTime.toLocaleString(\"pt-Br\")),a.a.createElement(\"td\",null,e.presence?\"Ocupado\":\"Liberado\"))})}},{key:\"getPresences\",value:function(){var e=Object(l.a)(o.a.mark(function e(){var t;return o.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t=[],e.prev=1,e.next=4,F();case 4:t=e.sent,e.next=10;break;case 7:e.prev=7,e.t0=e.catch(1),console.log(e.t0);case 10:this.setState({presences:t});case 11:case\"end\":return e.stop()}},e,this,[[1,7]])}));return function(){return e.apply(this,arguments)}}()},{key:\"onSelectFilter\",value:function(e){this.filtered=e.target.value,this.filter()}},{key:\"onAgroup\",value:function(e){this.agrouped=e.target.checked,this.filter()}},{key:\"filter\",value:function(){var e=this.state.presences,t=this.agrouped,n=this.filtered,r=[];r=t?e.reduce(function(e,t){return e.length&&e[e.length-1].presence===t.presence?(e[e.length-1].exitTime=t.exitTime,e):(e.push(t),e)},[]):e,\"all\"!==n?(r=r.filter(function(e){return e.presence===(\"busy\"===n)}),this.setState({presencesFiltered:r})):this.setState({presencesFiltered:r})}}]),t}(a.a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(a.a.createElement(T,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},62:function(e,t,n){e.exports=n(142)},68:function(e,t,n){}},[[62,2,1]]]);","extractedComments":[]}